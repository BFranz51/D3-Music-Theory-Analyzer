{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"type",
				"typeAndName"
			],
			[
				"layer2",
				"maxLayer2"
			],
			[
				"maxla",
				"maxLayer2"
			],
			[
				"max",
				"maxLayer1"
			],
			[
				"filt",
				"filteredLayer2"
			],
			[
				"source",
				"sourceIDSet"
			],
			[
				"outlier",
				"outlierNodes"
			],
			[
				"fonts",
				"impactFontSize"
			],
			[
				"impact",
				"impactRadius"
			],
			[
				"palete",
				"palette_NodeGroups"
			],
			[
				"but",
				"buttonHei"
			],
			[
				"spac",
				"spacingBetweenButtons"
			],
			[
				"displ",
				"displayNumResults"
			],
			[
				"allow",
				"allowDifferentNotes"
			],
			[
				"tst",
				"testType"
			],
			[
				"mult",
				"multForEachUnder7"
			],
			[
				"getTo",
				"getTopoIntervalCounts"
			],
			[
				"weigh",
				"weightByFactor"
			],
			[
				"score",
				"scoreIfHasAll"
			],
			[
				"graph",
				"graphInfo"
			],
			[
				"valid",
				"validateInput"
			],
			[
				"getData_Wor",
				"getData_World2"
			],
			[
				"getData_Me",
				"getData_ModifiedMedievalModes"
			],
			[
				"col",
				"colgroup\tTag"
			],
			[
				"getD",
				"getData_World1"
			],
			[
				"select",
				"selectNodeByID"
			],
			[
				"defa",
				"defaultSelection"
			],
			[
				"filtered",
				"filteredPairs"
			],
			[
				"nextLeve",
				"nextLevelPairs"
			],
			[
				"nodes",
				"nodesWithEdges"
			],
			[
				"count",
				"countNonEmptyBuckets"
			],
			[
				"rootSe",
				"setRootSelectColors"
			],
			[
				"inline",
				"inline-block\tdisplay"
			],
			[
				"bucket",
				"bucketItem"
			],
			[
				"fCount",
				"fCountTotal"
			],
			[
				"bit",
				"bittersweet"
			],
			[
				"data",
				"datasetID"
			],
			[
				"click",
				"clickKey"
			],
			[
				"wFactor",
				"wFactorNoteSimilarity"
			],
			[
				"wFa",
				"wFactorIntervalCount"
			],
			[
				"trait",
				"traitCurve"
			],
			[
				"add",
				"add_op"
			],
			[
				"file",
				"file_name"
			],
			[
				"copy",
				"copy_to_root"
			],
			[
				"path",
				"path_item"
			],
			[
				"imgInfo",
				"imgRawInfo"
			],
			[
				"butt",
				"buttonCount"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "NOTES\n\n\n\nIMPROVING ALGORITHM COMPLEXITY:\n\nStarting with 438,516 comparisons across all 12 keys, for all datasets\nDoing 2-step method: 70,863 comparisons (cut 83.8%)\n\nScoring algorithm:\n-\tStricter for note-wise analysis\n-\tFirst comparison: only score modes that contain the user mode root\n\n2nd iteration:\n\tSTART:\t\t\t\t\t\t\t\t\t\t[Comparisons: 434,650]\n\tCutoffs occur during algorithm:\t\t\t\t[Comparisons: 145,015]\n\tFilter layer 1 early:\t\t\t\t\t\t[Comparisons: 27,982]\n\tFilter layer 2 early:\t\t\t\t\t\t[Comparisons: 10,317]\n\nTODO:\n-\tControl: Randomness in filtering\n-\tMenu button: Reroll\n-\tMove unneeded data out of g object\n-\tNew default\n-\t\n\n\n\n\nCONTROLS:\n*\tHow set are you on these notes? (penalty for removing each = [none, 50%, 100%, multiplicative] )\n\t>\tAdding notes = minor scaling penalty, not big deal\n*\tDo you want to stick to this key? [no factor, 50%, instant disqualification]\n*\t\n*\tGraph max size\t\t||\t\tFilter style [only the best, 80/20 split of best, even distribution, only worst scores]\n\n*\t\n*\tTopology Features\n*\tInterval Topology (melodic options)\n\nSLIDERS:\n\tGas engine thingie with labels\n\tList of lights\n\n\n\n\nMethods:\n\n\tCOMPARE! (let M = # of modes stored)\n*\tStores modes in array of booleans\n*\tCompares via score function\n*\tMassive penalty if root not included from either side\n\tO(12M)\n\n\tOutput nodes, modes w/ keys\n\tLet N = # of nodes <= 12M\n\n*\tCompare each node to each other\n\tO(0.5 * N^2)\n\n\tEntire complexity = O(72M^2 + 12M)\n\n\tGRAPH!\n\tCreate force directed graph with findings\n\tSpecial attention to mystery mode\n\n\n\nCOOL STUFF:\n-\tSpecial FX when press note button...\n\t-\tHave note name fade out or something...\n\t-\tPiano key vibrates\n\nINPUT IDEA:\n\t* Allow multiple scale inputs\n\t* Start graph with them, and similarity edge between them\n\nINPUT:\n\t* Better to add or take away notes? (balance)\n\nINPUT:\n\t* Soft Parameters / Extreme Parameters - makes EVERY score value raised to certain power\n\t* Put this at the end\n\t* Labels: \"Be forgiving\" and \"Stick to parameters\"\n\nCLUSTERING IDEA:\n\tINPUT: graphDepth\n\n\t* Get entire network\n\t* Get list of interesting connections to user scale\n\t* Identical modes => network (not clustered)\n\t* Reduce to clusters based on:\n\t\t- Close scores to user scale\n\t\t- Close scores to each other\n\t* Clusters => network\n\t* Edges between clusters => network\n\t\tCutoff: (1 / graphDepth)\n\t* Modes connected to clusters => network (duplicate each, so not a mess of connections?????)\n\t\tCutoff: (2 / graphDepth)\n\t\tConnect to each other too. Not to user scale\n\t* Modes connected to those...\n\t\tCutoff: (3 / graphDepth)\n\t\tConnect to each other too. Not to user scale\n\n\n\n<!--<svg width=\"500\" height=\"360\">\n        <!-- Piano background\n        <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"500\" height=\"360\" style=\"fill: #203720; stroke: #405740; stroke-width:3; opacity:1.0\" />\n        <!-- Piano top\n        <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"500\" height=\"70\" style=\"fill: #304f30; stroke: #506f50; stroke-width:3; opacity:1.0\" />\n        <!-- Root selection circles\n        <!-- Upper part of notes\n        <rect x=\"10\" y=\"70\" rx=\"5\" ry=\"5\" width=\"20\" height=\"70\" style=\"fill: #304f30; stroke: #506f50; stroke-width:3; opacity:1.0\" />\n        <!-- Lower part of notes\n    </svg>-->\n",
			"file": "notes.txt",
			"file_size": 3191,
			"file_write_time": 131853239566305663,
			"settings":
			{
				"buffer_size": 3191,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class CameraFollow : MonoBehaviour {\n    public float xOffset = -16;\n    public int zOffset = 19;\n    public Transform target;\n    Vector3 targetPos, smoothedPos;\n\tpublic float smoothSpeed = 0.125f;\n\tVector3 velocity = Vector3.one;\n\n\tvoid FixedUpdate () {\n        targetPos = new Vector3(target.position.x - xOffset, target.position.y, zOffset);\n        \n\t\tsmoothedPos = Vector3.SmoothDamp (transform.position, targetPos, ref velocity, smoothSpeed);\n\t\tsmoothedPos = new Vector3 (targetPos.x, smoothedPos.y, targetPos.z);\n\t\ttransform.position = smoothedPos;\n\t}\n\n}\n",
			"file": "/G/Game Development/Group Game Jams/2018_9_22 Shovel Tri/Shovel-Jam-Tri/UnityFolder/Shovel Jam Tri/Assets/Scripts/CameraFollow.cs",
			"file_size": 707,
			"file_write_time": 131853310283500455,
			"settings":
			{
				"buffer_size": 650,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/G/Game Development/Group Game Jams/2018_9_22 Shovel Tri/Shovel-Jam-Tri/UnityFolder/Shovel Jam Tri/Assets/Scripts/Background/Clouds/CloudLayer.cs",
			"settings":
			{
				"buffer_size": 1295,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/G/Game Development/Group Game Jams/2018_9_22 Shovel Tri/Shovel-Jam-Tri/UnityFolder/Shovel Jam Tri/Assets/Scripts/Obstacles/ObstacleCollision.cs",
			"settings":
			{
				"buffer_size": 1220,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/G/Game Development/Group Game Jams/2018_9_22 Shovel Tri/Shovel-Jam-Tri/UnityFolder/Shovel Jam Tri/Assets/Scripts/Player/Health.cs",
			"settings":
			{
				"buffer_size": 2475,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/G/Game Development/Group Game Jams/2018_9_22 Shovel Tri/Shovel-Jam-Tri/UnityFolder/Shovel Jam Tri/Assets/Scripts/Player/Score.cs",
			"settings":
			{
				"buffer_size": 2618,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/G/Game Development/Group Game Jams/2018_9_22 Shovel Tri/Shovel-Jam-Tri/UnityFolder/Shovel Jam Tri/Assets/Scripts/Obstacles/ObstacleSpawner.cs",
			"settings":
			{
				"buffer_size": 8320,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "scripts/d3graph.js",
			"settings":
			{
				"buffer_size": 18963,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/G/App Development/D3-Music-Theory-Analyzer",
		"/G/App Development/D3-Music-Theory-Analyzer/scripts",
		"/G/App Development/D3-Music-Theory-Analyzer/scripts/similarityAlgorithm",
		"/G/App Development/D3-Music-Theory-Analyzer/styles",
		"/G/App Development/D3-Music-Theory-Analyzer/templates"
	],
	"file_history":
	[
		"/G/App Development/D3-Music-Theory-Analyzer/scripts/scores.js",
		"/G/App Development/D3-Music-Theory-Analyzer/scripts/similarityAlgorithm/noteOverlap.js",
		"/G/App Development/D3-Music-Theory-Analyzer/modevis.html",
		"/G/App Development/D3-Music-Theory-Analyzer/scripts/similarityAlgorithm/mood.js",
		"/G/App Development/D3-Music-Theory-Analyzer/scripts/similarityAlgorithm/roots.js",
		"/G/App Development/D3-Music-Theory-Analyzer/scripts/similarityAlgorithm/topologyIntervals.js",
		"/G/App Development/D3-Music-Theory-Analyzer/scripts/similarityAlgorithm/topologyRegions.js",
		"/G/App Development/D3-Music-Theory-Analyzer/scripts/controls.js",
		"/G/App Development/D3-Music-Theory-Analyzer/scripts/adaptiveSVG.js",
		"/G/App Development/D3-Music-Theory-Analyzer/scripts/modevis.js",
		"/G/App Development/D3-Music-Theory-Analyzer/scripts/graphPreProcess.js",
		"/G/App Development/D3-Music-Theory-Analyzer/scripts/tempData.js",
		"/G/App Development/D3-Music-Theory-Analyzer/scripts/d3graph.js",
		"/G/App Development/D3-Music-Theory-Analyzer/templates/largePiano.html",
		"/G/App Development/D3-Music-Theory-Analyzer/styles/styles.css",
		"/G/App Development/D3-Music-Theory-Analyzer/scripts/dataManip.js",
		"/G/App Development/D3-Music-Theory-Analyzer/templates/inputSimilarity.html",
		"/G/App Development/D3-Music-Theory-Analyzer/scripts/filter.js",
		"/G/Game Development/2018 - Enchanted Apples/Enchanted Apples/Assets/Modules/ActionEssentials/ActionSFX/ActorSFX.cs",
		"/G/App Development/D3-Music-Theory-Analyzer/templates/instructions.html",
		"/G/_PROJECTS/D3-Music-Theory-Analyzer/scripts/d3graph.js",
		"/G/_PROJECTS/D3-Music-Theory-Analyzer/scripts/similarityAlgorithm/mood.js",
		"/G/_PROJECTS/D3-Music-Theory-Analyzer/scripts/similarityAlgorithm/noteOverlap.js",
		"/G/_PROJECTS/D3-Music-Theory-Analyzer/scripts/similarityAlgorithm/roots.js",
		"/G/_PROJECTS/D3-Music-Theory-Analyzer/scripts/adaptiveSVG.js",
		"/G/_PROJECTS/D3-Music-Theory-Analyzer/scripts/controls.js",
		"/G/_PROJECTS/D3-Music-Theory-Analyzer/scripts/tempData.js",
		"/G/_PROJECTS/D3-Music-Theory-Analyzer/scripts/textManip.js",
		"/G/_PROJECTS/D3-Music-Theory-Analyzer/styles/styles.css",
		"/G/_PROJECTS/D3-Music-Theory-Analyzer/scripts/determineChords.js",
		"/G/_PROJECTS/D3-Music-Theory-Analyzer/scripts/filter.js",
		"/G/_PROJECTS/D3-Music-Theory-Analyzer/scripts/graphPreProcess.js",
		"/G/_PROJECTS/D3-Music-Theory-Analyzer/scripts/loadTemplates.js",
		"/G/_PROJECTS/D3-Music-Theory-Analyzer/scripts/modevis.js",
		"/G/_PROJECTS/D3-Music-Theory-Analyzer/scripts/scores.js",
		"/G/_PROJECTS/D3-Music-Theory-Analyzer/scripts/stats.js",
		"/G/_PROJECTS/D3-Music-Theory-Analyzer/scripts/dataManip.js",
		"/G/_PROJECTS/D3-Music-Theory-Analyzer/templates/largePiano.html",
		"/G/_PROJECTS/D3-Music-Theory-Analyzer/templates/instructions.html",
		"/G/_PROJECTS/D3-Music-Theory-Analyzer/templates/inputSimilarity.html",
		"/G/_PROJECTS/D3-Music-Theory-Analyzer/modevis.html",
		"/G/_PROJECTS/D3-Music-Theory-Analyzer/D3-Music-Theory-Analyzer.sublime-project",
		"/G/Prog1/modevis/modevis.html",
		"/G/Prog1/tensor/simplerun/1_sess/ex5.py",
		"/G/Prog1/tensor/simplerun/1_sess/play2.py",
		"/G/Prog1/tensor/simplerun/1_sess/play1.py",
		"/G/Prog1/tensor/simplerun/0_setup/test.py",
		"/G/Prog1/Util/BackupMusic.py",
		"/G/_PERSONAL/NoteDepository/Music/SONG TITLES.txt",
		"/G/_PERSONAL/NoteDepository/Music/GREAT INSTRUMENTS",
		"/G/_PERSONAL/NoteDepository/Security/accs.txt",
		"/G/_PERSONAL/NoteDepository/Reddit/nfp",
		"/G/_PERSONAL/NoteDepository/SI_Reduce/SI_Reduce.txt",
		"/G/_PERSONAL/NoteDepository/Reddit/da3209",
		"/G/_PERSONAL/NoteDepository/Music/TRACK MUSIC PIECES.tx",
		"/G/_PERSONAL/NoteDepository/SI_Reduce/BRAINSTORM VERY REDUCED VERSION",
		"/G/_PERSONAL/NoteDepository/Game_Ideas/snowboardgame.txt",
		"/G/_PERSONAL/NoteDepository/Music/Albums/06_Chimes",
		"/G/_PERSONAL/NoteDepository/Music/Albums/05_Trio",
		"/G/_PERSONAL/NoteDepository/Music/VST to consider.txt",
		"/G/_PERSONAL/NoteDepository/IdentitySup/idSupTodo.txt",
		"/G/_PERSONAL/NoteDepository/Security/securityLog.txt",
		"/G/_PERSONAL/NoteDepository/Music/Albums/07_Waltzes",
		"/G/_PERSONAL/NoteDepository/TODO_Lists/todoCarpetBreak",
		"/G/_PERSONAL/NoteDepository/Music/TRACK MAIN",
		"/G/_PERSONAL/NoteDepository/Music/ALL STAR INSTRUMENTS",
		"/G/_PERSONAL/NoteDepository/Game_Ideas/depositoryOfIdeas",
		"/G/_PERSONAL/NoteDepository/Reddit/security",
		"/G/_PERSONAL/NoteDepository/TODO_Lists/todoBackAtMoffitt",
		"/C/Sandbox/MainCentral/DefaultBox/RegHive",
		"/G/Unity_Medical/TumorVis1/TumorVis1/Assets/Scripts/ImageAnalysis/ImageWindow.js",
		"/G/_PERSONAL/NoteDepository/Music/MODES and SCALES.txt",
		"/G/_PERSONAL/NoteDepository/MedProjects/3dVis.txt",
		"/G/Unity_Medical/TumorVis1/TumorVis1/Assets/Scripts/packSimpleMenu/SimpleMenu.js",
		"/G/_PERSONAL/NoteDepository/Music/MUSIC PIECE IDEAS.txt",
		"/G/_PERSONAL/NoteDepository/NoteDepository.sublime-project",
		"/G/Unity_Medical/TumorVis1/TumorVis1/Assets/Scripts/ImageAnalysis/sImageProcess.js",
		"/G/Unity_Medical/TumorVis1/TumorVis1/Assets/Scripts/MeshGeneral/ApplyMesh.js",
		"/G/Unity_Medical/TumorVis1/TumorVis1/Assets/Scripts/MeshGeneral/MeshData.js",
		"/G/Unity_Medical/TumorVis1/TumorVis1/Assets/Scripts/MeshVoxel/ImgToVoxels.js",
		"/G/Unity_Medical/TumorVis1/TumorVis1/Assets/Scripts/tumor1.shader",
		"/G/Unity_Medical/TumorVis1/TumorVis1/Assets/Scripts/ImageAnalysis/ImageCore.js",
		"/G/Unity_Medical/TumorVis1/TumorVis1/Assets/Scripts/GUI_Handle.js",
		"/G/Unity_Medical/TumorVis1/TumorVis1/Sublime_TumorVis1.sublime-project",
		"/G/Unity_Medical/TumorVis1/TumorVis1/Assets/Scripts/packStaticGUI/sGUI.js",
		"/G/Unity_Medical/TumorVis1/TumorVis1/Assets/Scripts/SimpleMenu.js",
		"/G/Unity_Medical/TumorVis1/TumorVis1/Assets/Scripts/CamMove.js",
		"/G/Unity_Medical/TumorVis1/TumorVis1/Assets/Scripts/KeyboardInput.js",
		"/G/Unity_Medical/TumorVis1/TumorVis1/Assets/Scripts/Links.js",
		"/G/Unity_Medical/TumorVis1/TumorVis1/Assets/Scripts/sGUI.js",
		"/G/Unity_Medical/TumorVis1/TumorVis1/Assets/Scripts/Theme.js",
		"/G/Unity_Medical/TumorVis1/output/WebGL_Tests/2018_7_9 test web player/index.html"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 105.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"userModeExtraRadius",
			"impactRadius",
			"createSVGPiano",
			".label",
			"varianceI",
			"root",
			"numPrinted1",
			"hoverKeyOn",
			"$(",
			"Hexatonic",
			"#    #   #  ",
			"#  # # ## # ",
			"#  # # # #  ",
			"Northern",
			"sourceIDSet",
			"addEdgesInBatch",
			"rootSel",
			"colorFaded",
			"nodeSel",
			"createUserMode",
			"createGraphNode",
			"groupRadius",
			"createGraphNode =",
			"icons",
			"icons.",
			"iconBorder",
			"labelList",
			"spacingBetweenIcons",
			"icons.piano",
			"edgeStrMult",
			"createGraphNode",
			"getTopoMelodyScore",
			"scoreIfEmpty",
			"Selected",
			"runSimulation",
			"runAnalysis",
			"score(",
			"validInput",
			"getTempData",
			"moda",
			"Change",
			"Byzantine",
			"[## ## # # # ]",
			"Super Locrian",
			"pianoKey",
			"foo",
			"[## ## # ##  ]",
			"hungarian minor",
			"[## # # # ## ]",
			"[# # # ## ## ]",
			"[# ##  ## # #]",
			"validPointY",
			"validPointX",
			"setPanelMode",
			"hover",
			"setIconHover",
			"mouseOverIconTrigger",
			"small-white",
			"GetNoteName",
			"12",
			"SCALE",
			"[# # ## ## # ]",
			"reset",
			"setPanelMode",
			"setCheckboxes",
			"createSVGPiano",
			"iconList",
			"setModalActive",
			"iconLinks",
			"icons",
			"start",
			"keySel",
			"panel",
			"updateD3Panel",
			"analyzeModeForPanel",
			"createSVGPiano",
			"cell",
			"createD3Graph"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"numScoresPrinted1",
			"set_DetectedLayer1",
			"activeSVG.",
			"buttons",
			"spacingBetweenButtons",
			"scoreIfHasNone",
			"SCORES.getScore(",
			"validatePointY",
			"validatePointX",
			"getNoteName",
			"NOTES_IN_SCALE",
			"iconBorderList",
			"icons"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 6,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "notes.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3191,
						"regions":
						{
						},
						"selection":
						[
							[
								620,
								620
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/G/Game Development/Group Game Jams/2018_9_22 Shovel Tri/Shovel-Jam-Tri/UnityFolder/Shovel Jam Tri/Assets/Scripts/CameraFollow.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 650,
						"regions":
						{
						},
						"selection":
						[
							[
								321,
								321
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/G/Game Development/Group Game Jams/2018_9_22 Shovel Tri/Shovel-Jam-Tri/UnityFolder/Shovel Jam Tri/Assets/Scripts/Background/Clouds/CloudLayer.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1295,
						"regions":
						{
						},
						"selection":
						[
							[
								665,
								665
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 96.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/G/Game Development/Group Game Jams/2018_9_22 Shovel Tri/Shovel-Jam-Tri/UnityFolder/Shovel Jam Tri/Assets/Scripts/Obstacles/ObstacleCollision.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1220,
						"regions":
						{
						},
						"selection":
						[
							[
								362,
								362
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/G/Game Development/Group Game Jams/2018_9_22 Shovel Tri/Shovel-Jam-Tri/UnityFolder/Shovel Jam Tri/Assets/Scripts/Player/Health.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2475,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 432.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/G/Game Development/Group Game Jams/2018_9_22 Shovel Tri/Shovel-Jam-Tri/UnityFolder/Shovel Jam Tri/Assets/Scripts/Player/Score.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2618,
						"regions":
						{
						},
						"selection":
						[
							[
								2497,
								2497
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 814.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/G/Game Development/Group Game Jams/2018_9_22 Shovel Tri/Shovel-Jam-Tri/UnityFolder/Shovel Jam Tri/Assets/Scripts/Obstacles/ObstacleSpawner.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8320,
						"regions":
						{
						},
						"selection":
						[
							[
								2093,
								2093
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1262.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "scripts/d3graph.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18963,
						"regions":
						{
						},
						"selection":
						[
							[
								78,
								78
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "D3-Music-Theory-Analyzer.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 215.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
